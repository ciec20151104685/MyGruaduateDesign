<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.persistence.dao.OrderSeatMapper">
  <resultMap id="BaseResultMap" type="com.persistence.entity.OrderSeat">
    <id column="StudentId" jdbcType="INTEGER" property="studentid" />
    <result column="seatId" jdbcType="INTEGER" property="seatid" />
    <result column="Orderdata" jdbcType="TIMESTAMP" property="orderdata" />
    <result column="DelateData" jdbcType="TIMESTAMP" property="delatedata" />
    <result column="Savetime" jdbcType="INTEGER" property="savetime" />
    <result column="OutOrder" jdbcType="INTEGER" property="outorder" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    StudentId, seatId, Orderdata, DelateData, Savetime, OutOrder
  </sql>
  <select id="selectByExample" parameterType="com.persistence.entity.OrderSeatExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from orderseat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderseat
    where StudentId = #{studentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orderseat
    where StudentId = #{studentid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.persistence.entity.OrderSeatExample">
    delete from orderseat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.persistence.entity.OrderSeat">
    insert into orderseat (StudentId, seatId, Orderdata, 
      DelateData, Savetime, OutOrder
      )
    values (#{studentid,jdbcType=INTEGER}, #{seatid,jdbcType=INTEGER}, #{orderdata,jdbcType=TIMESTAMP}, 
      #{delatedata,jdbcType=TIMESTAMP}, #{savetime,jdbcType=INTEGER}, #{outorder,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.persistence.entity.OrderSeat">
    insert into orderseat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        StudentId,
      </if>
      <if test="seatid != null">
        seatId,
      </if>
      <if test="orderdata != null">
        Orderdata,
      </if>
      <if test="delatedata != null">
        DelateData,
      </if>
      <if test="savetime != null">
        Savetime,
      </if>
      <if test="outorder != null">
        OutOrder,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="seatid != null">
        #{seatid,jdbcType=INTEGER},
      </if>
      <if test="orderdata != null">
        #{orderdata,jdbcType=TIMESTAMP},
      </if>
      <if test="delatedata != null">
        #{delatedata,jdbcType=TIMESTAMP},
      </if>
      <if test="savetime != null">
        #{savetime,jdbcType=INTEGER},
      </if>
      <if test="outorder != null">
        #{outorder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update orderseat
    <set>
      <if test="record.studentid != null">
        StudentId = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.seatid != null">
        seatId = #{record.seatid,jdbcType=INTEGER},
      </if>
      <if test="record.orderdata != null">
        Orderdata = #{record.orderdata,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delatedata != null">
        DelateData = #{record.delatedata,jdbcType=TIMESTAMP},
      </if>
      <if test="record.savetime != null">
        Savetime = #{record.savetime,jdbcType=INTEGER},
      </if>
      <if test="record.outorder != null">
        OutOrder = #{record.outorder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orderseat
    set StudentId = #{record.studentid,jdbcType=INTEGER},
      seatId = #{record.seatid,jdbcType=INTEGER},
      Orderdata = #{record.orderdata,jdbcType=TIMESTAMP},
      DelateData = #{record.delatedata,jdbcType=TIMESTAMP},
      Savetime = #{record.savetime,jdbcType=INTEGER},
      OutOrder = #{record.outorder,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.persistence.entity.OrderSeat">
    update orderseat
    <set>
      <if test="seatid != null">
        seatId = #{seatid,jdbcType=INTEGER},
      </if>
      <if test="orderdata != null">
        Orderdata = #{orderdata,jdbcType=TIMESTAMP},
      </if>
      <if test="delatedata != null">
        DelateData = #{delatedata,jdbcType=TIMESTAMP},
      </if>
      <if test="savetime != null">
        Savetime = #{savetime,jdbcType=INTEGER},
      </if>
      <if test="outorder != null">
        OutOrder = #{outorder,jdbcType=INTEGER},
      </if>
    </set>
    where StudentId = #{studentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.persistence.entity.OrderSeat">
    update orderseat
    set seatId = #{seatid,jdbcType=INTEGER},
      Orderdata = #{orderdata,jdbcType=TIMESTAMP},
      DelateData = #{delatedata,jdbcType=TIMESTAMP},
      Savetime = #{savetime,jdbcType=INTEGER},
      OutOrder = #{outorder,jdbcType=INTEGER}
    where StudentId = #{studentid,jdbcType=INTEGER}
  </update>
</mapper>